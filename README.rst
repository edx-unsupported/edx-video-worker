This repository has been archived and is no longer supportedâ€”use it at your own risk. This repository may depend on out-of-date libraries with security issues, and security updates will not be provided. Pull requests against this repository will also not be merged.



=====================
edx-video-worker
=====================

Encode worker node for edx-video-pipeline
------------------------------
This is a rabbitMQ brokered, celery cluster running off of a specific formulaic CRF transcode, generated by the central (running django) node
Commands are then passed back to the Django node and videos are routed to the appropriate delivery method.
This worker


.. image:: https://travis-ci.org/edx/edx-video-worker.svg?branch=master
    :target: https://travis-ci.org/edx/edx-video-worker

--------------

Installation
------------

::

    python setup.py install


Usage
-----

**from command line:**

::

    video_worker


**Python** instantiate class:

::

    VW = VideoWorker(
        veda_id = '${ID_STRING}'
        encode_profile = '${ENCODE_ID}'
        jobid='${JOB_ID}'
        )


Test (nose)
-----

::

    VW.test()


Celery Async
-----

::

    import celeryapp

::

    veda_id='${ID_STRING}'
    encode_profile='${ENCODE_ID}'
    jobid='${JOB_ID}'

    celeryapp.worker_task_fire.apply_async(
        (veda_id, encode_profile, jobid),
        queue='test_node'
        )


**@yro / 2016**
